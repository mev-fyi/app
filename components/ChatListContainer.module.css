/* Main container for the entire layout */
.layoutContainer {
  display: flex;
  height: 100vh; /* Full height of the viewport */
  justify-content: space-between; /* Space between ensures elements are pushed to the edges */
  align-items: flex-start; /* Aligns items to the top */
}

.leftPanel {
  flex: 1; /* Allows panels to grow */
  min-width: 400px; /* Minimum width */
  max-width: 30%; /* Adjusted maximum width */
  display: flex;
  flex-direction: column;
  align-items: center; /* Horizontally center */
  position: relative; /* Change to relative to make the left property effective */
  padding-top: 100px;
}

.rightPanel {
  flex: 1; /* Allows panels to grow */
  min-width: 400px; /* Minimum width */
  max-width: 30%; /* Adjusted maximum width */
  display: flex;
  flex-direction: column;
  align-items: center; /* Horizontally center */
  position: relative; /* Change to relative to make the left property effective */
  left: 30px;
  left: 50px;
}


/* Middle panel for chatlist and prompt form */
.middlePanel {
  flex: 1; /* Allows the panel to grow */
  min-width: 500px; /* Minimum width to ensure it doesn't get too small */
  max-width: 40%; /* Adjusted maximum width */
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* This pushes the ChatPanel to the bottom */
  box-sizing: border-box;
  padding: 60px; /* Adjust padding as needed */
  position: relative; /* Needed for absolute positioning within */
  box-sizing: border-box;
}

/* Container for the chat list and chat panel to ensure they align properly */
.chatListAndPanelContainer {
  display: flex;
  flex-direction: column;
  width: 100%; /* Take the full width of the middle panel */
  max-width: 850px; /* Maximum width, keep this consistent with .middlePanel */
  margin: auto; /* Center within the middle panel */
}

.scrollableContainer {
  max-height: calc(100vh - 270px);
  overflow-y: auto;
  flex-grow: 1; /* Allows the container to grow and take available space */
  /* ... other styles ... */
  /*padding-bottom: 500px;*/
}

/* ChatList container with scrollable content */
.chatListContainer {
  max-height: calc(100vh - 120px - 100px);
  overflow-y: auto; /* Ensures vertical scroll */
  /* Remove padding if it causes misalignment with the ChatPanel */
}

.chatPanel {
  position: fixed; /* Or 'sticky' if you want it to act as fixed within a scrolling parent */
  bottom: 0;
  width: 100%; /* Full viewport width */
  max-width: 850px; /* Match the width of .middlePanel */
  left: 50%; /* Center the panel */
  transform: translateX(-50%); /* Offset the panel to the left by half its width to center it */
  box-sizing: border-box;
  z-index: 10; /* Ensure it's above other content */
}


/* Content within chatPanel for alignment and spacing */
.chatPanelContent {
  display: flex;
  align-items: center;
  justify-content: space-between; /* This will add space between broom button and prompt form */
  padding: 0 20px; /* Padding inside the chatPanel, adjust as needed */
}

.broomButton {
  display: flex; /* Flexbox display like Tailwind's 'flex' */
  align-items: center; /* Centers items along the cross axis like Tailwind's 'items-center' */
  justify-content: center; /* Centers items along the main axis like Tailwind's 'justify-center' */
  height: 2rem; /* Height 8 like Tailwind's 'h-8' */
  width: 2rem; /* Width 8 like Tailwind's 'w-8' */
  border-radius: 9999px; /* Fully rounded like Tailwind's 'rounded-full' */
  background-color: #000000; /* Black background color */
  padding: 0; /* No padding like Tailwind's 'p-0' */
  cursor: pointer; /* To indicate that it's clickable */
  margin-right: 20px; /* Adjust spacing as needed */
}

.promptFormContainer {
  flex-grow: 1; /* Allow the prompt form to take up the remaining space */
  padding-right: 60px; /* Adjust padding to avoid overlap with enter button */
  width: 100%; /* Ensure the form takes the full width */
  margin-right: 20px; /* Space before the 'Send' button */
  max-width: 850px; /* Ensures it matches the width of .middlePanel */
}

.promptForm {
  display: flex;
  width: 100%;
}

.promptFormInner {
  position: relative;
  display: flex;
  width: 100%;
  background-color: #000; /* Replace with the desired background color */
  padding: 0.5rem;
  border-radius: 0.375rem; /* Adjust as needed */
  border: 1px solid; /* Optional, remove if not needed */
}

.promptTextarea {
  width: 100%;
  resize: none;
  padding: 1.3rem 0;
  outline: none;
  font-size: 1rem;
}

.sendButtonContainer {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.stopGeneratingButtonContainer {
  display: flex;
  height: 1rem; /* Adjust as needed */
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem; /* Space below the button */
}

/* For WebKit (Chrome, Safari, newer versions of Opera): */
.chat-list-container::-webkit-scrollbar {
  width: 10px;
}
.chat-list-container::-webkit-scrollbar-track {
  background: #f1f1f1;
}
.chat-list-container::-webkit-scrollbar-thumb {
  background: #888;
}
.chat-list-container::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* For Firefox: */
.chat-list-container {
  scrollbar-width: thin;
  scrollbar-color: #888 #f1f1f1;
}

/* Metadata container */
.metadataContainer {
  width: 100%; /* Use 100% of the rightPanel width */
  max-width: 600px; /* Example max-width */
  max-height: calc(100vh - 120px - 100px);
  margin-left: 10px; /* Align to the left by setting left margin */
  margin-right: auto; /* Keeps right margin automatic */
  padding: 1rem;
  overflow-y: auto; /* Allows vertical scrolling if content overflows */
  overflow-x: hidden; /* Hides horizontal scrollbar and wraps text */
  word-wrap: break-word; /* Allows long words to be broken and wrapped to the next line */
  white-space: normal; /* Normal text wrapping */
  transition: transform 0.3s; /* Smooth transition for sliding in/out */
  z-index: 10; /* Ensure it's above other content */
  padding-right: 10%;
  padding-left: 5%;
  opacity: 1; /* Start with invisible */
  transition: opacity 0.5s ease-in-out; /* Smooth transition for opacity */
}

/* Class to make metadataContainer visible */
.metadataContainerVisible {
  opacity: 1; /* Fully visible */
}

/* Style for the button to toggle the metadata view */
.toggleMetadataButton {
  display: none; /* Hide by default, will be shown in media query for mobile */
  position: fixed;
  right: 1rem;
  bottom: 130px; /* Increased distance from bottom */
  background-color: #333; /* Example color */
  color: #fff;
  padding: 6px 12px; /* Reduced padding */
  font-size: 0.8rem; /* Smaller font size */
  cursor: pointer;
  z-index: 20; /* Above the metadata panel */
}

.metadataTitle {
  color: #fff;
  font-weight: bold;
  font-size: 1.5rem;
  margin-bottom: 2rem;
  margin-top: 1rem;
}

.customMarkdownFont {
  font-size: 1.1rem; /* Adjust the font size as needed */
}

.customMarkdownFontMobile {
  font-size: 0.89rem; /* Set your desired font size for mobile */
}

@media (max-width: 767px) {
  .customMarkdownFont {
    font-size: 0.89rem !important; /* Adjust the font size as needed */
  }

  .leftPanel, .rightPanel {
    display: none; /* Hide left and right panels on mobile */
  }

  .middlePanel {
    position: static;
    left: auto;
    transform: none;
    width: 100%; /* Full width of the viewport */
    max-width: none;
    min-width: 0; /* Remove minimum width for mobile */
    padding-bottom: 20px; /* Adjust padding for mobile */
  }

  .chatListContainer {
    padding: 20px; /* Adjusted padding for mobile */
    width: 100%; /* Ensure it takes full width */
    max-height: calc(100vh - 20px); /* Adjust max-height for mobile */
    margin: 0; /* Reset margin */
    padding-top: 35px;
    padding-bottom: 200px;
  }
  
  .metadataContainer {
    position: fixed; /* Fixed position for mobile */
    top: 0;
    right: -100%; /* Initially off-screen */
    height: 100%;
    width: 80%; /* Adjust width as needed */
    transform: translateX(100%); /* Positioned off-screen */
    transition: transform 0.3s; /* Smooth transition */
    z-index: 30; /* Above other elements */
  }

  .metadataContainerActive {
    transform: translateX(0); /* Bring into view */
  }

  .toggleMetadataButton {
    display: block; /* Show the toggle button on mobile */
  }

}


@media screen and (max-width: 768px) {
  .mobileHide {
    display: none;
  }
}


@media (min-width: 768px) {
  /* Adjustments for larger screens where the metadata can be shown inline */
  .metadataContainer {
    position: static; /* Back to the normal document flow */
    right: auto; /* No longer off-screen */
    transform: none; /* No transform needed */
  }
}

