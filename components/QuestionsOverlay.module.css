.questionsContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.questionsOverlay {
  display: flex;
  flex-wrap: wrap;
  gap: 5px;
  justify-content: center;
  width: 90%;
  margin-left:25px;
  /* Remove padding if it's no longer needed for the grid */
}

.questionsOverlayLeftPanel {
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding: 5px;
  width: 100%; /* Match the width of the leftPanel */
  align-items: center; /* Center content vertically */
  overflow-y: auto; /* Ensure vertical scroll */
}

.shuffleButton {
  display: inline-flex; /* Ensures flexbox properties apply, aligning children centrally */
  align-items: center;
  justify-content: center;
  width: 44px; /* Adjusted to fit the icon size plus some padding */
  height: 44px; /* Adjusted to fit the icon size plus some padding */
  border-radius: 50%; /* Ensures the button is perfectly circular */
  padding: 0; /* Resets padding as it's no longer needed for text */
  cursor: pointer;
  background-color: transparent; /* Makes the background transparent */
  background-image: url('/ui_icons/refresh_reload_2.svg'); /* Sets the background image */
  background-repeat: no-repeat; /* Prevents the background image from repeating */
  background-position: center; /* Centers the background image */
  background-size: 80%; /* Adjusts the SVG size to take up 80% of the button space */
  border: none; /* Removes any border */
}

.questionBox {
  width: calc(50% - 8px); /* Adjust width for 2 boxes per row, minus half the gap */
  max-width: 400px; /* Keep the max-width to control size */
  border: 1px solid rgba(128, 128, 128, 0); /* Grey border with 10% opacity */
  border-radius: 7px;
  padding: 5px;
  height: 140px;
  box-sizing: border-box;
  display: flex;
  align-items: center; /* Align items vertically in the center */
  justify-content: center; /* Horizontally center the content */
  margin: 10px auto; /* Add margin above and below */
  cursor: pointer; /* Changes the cursor to a hand icon on hover */
}

.questionBox:hover {
  background-color: rgba(255, 255, 255, 0.1); /* Brighten background on hover */
}

.questionBoxLeftPanel {
  border: 1px solid rgba(128, 128, 128, 0); /* Grey border with 10% opacity */
  border-radius: 6px; /* Match Tailwind's rounded-md */
  padding: 3px;
  height: 100px;
  width: 300px;
  box-sizing: border-box;
  display: flex;
  align-items: center; /* Align items vertically in the center */
  justify-content: center; /* Horizontally center the content */
  margin: auto;
  transition: background-color 0.3s; /* Smooth transition for background color */
}

.questionBoxLeftPanel:hover {
  background-color: rgba(255, 255, 255, 0.1); /* Brighten background on hover */
}

.question {
  padding-top: 10px;
  text-align: left;
  word-wrap: break-word;
  white-space: normal;
  line-height: 1.2;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  text-decoration: none; /* Add this to remove underline */
  padding-left: 5px; /* Make text start a bit further than questionBox's edge */
  cursor: pointer; /* Changes the cursor to a hand icon on hover */
}


.fullWidthButton {
  width: 100%; /* Make the button take full width of its container */
  display: flex; /* Enable flex layout */
  align-items: center; /* Align items vertically in the center */
  justify-content: flex-start; /* Align items to the start (left) */
}

/*overflow: hidden;*/
@media screen and (max-width: 600px) {
  .questionsOverlayLeftPanel {
    padding: 0px;
    width: 100%; /* Match the width of the leftPanel */
    padding-top: 5px;
    padding-bottom: 150px;
  }
  

  .questionBoxLeftPanel{
    max-width: none;
    width: 100%;
    height: 115px;
  }

  .question {
    /* Adjust font size and line height if needed */
    line-height: 1.4; /* Increase line height for better readability */
  }

  .shuffleButton {
    /* Adjust button styling as needed */
    padding: 6px 12px; /* Smaller button padding for mobile */
    margin-bottom: 2px; /* Add some space below the button */
  }


}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

.fadeIn {
  animation: fadeIn 0.3s ease forwards;
}

.fadeOut {
  animation: fadeOut 0.3s ease forwards;
}

.hidden {
  display: none;
}
